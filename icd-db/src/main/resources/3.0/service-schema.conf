id: "http://csw.tmt.org/service-schema#"
"$schema": "http://json-schema.org/draft-07/schema#"

description = "Defines the model describing the HTTP services provided or required by this subsystem"
type = object
additionalProperties: false
anyOf: [
  // require the name of this subsystem and compnent and a provides and/or a requires block
  {required: [subsystem, component, provides]}
  {required: [subsystem, component, requires]}
  {required: [subsystem, component, provides, requires]}
]
properties {
  _id {
    description = "Optional unique id (automatically generated)"
    type = string
  }
  _version {
    description = "Optional version (automatically generated)"
    type = integer
  }
  subsystem {
    description = "The name of this Subsystem"
    include classpath("3.0/subsystem.conf")
  }
  component {
    description = "Name of the component"
    type = string
    pattern = "^[^\\-]+$"
  }
  description {
    description = "Optional overview of services used or provided"
    type = string
  }
  provides {
    description = "A list of OpenApi descriptions of HTTP services provided by this subsystem"
    type = array
    items {
      type = object
      required = [name, description, openApi]
      properties {
        name {
          description = "The name of the HTTP service provided by this subsystem"
          type = string
        }
        description {
          description = "A short description of the service"
          type = string
        }
        openApi {
          description = "The name of the YAML or JSON file containing the OpenApi description of the service"
          type = string
        }
      }
    }
  }
  requires {
    description = "A list of services provided by other subsystems that are used/required by this subsystem"
    type = array
    items {
      type = object
      required = [subsystem, component, name]
      properties {
        subsystem {
          description = "The name of the subsystem containing the component providing the service"
          include classpath("3.0/subsystem.conf")
        }
        component {
          description = "Name of the component providing the service"
          type = string
          pattern = "^[^\\-]+$"
        }
        name {
          description = "The name of the required service"
          type = string
        }
        paths {
          description = "Optional HTTP OpenAPI paths or routes used (Default: all paths assumed to be used)"
          type = array
          items {
            type = object
            required = [method, path]
            properties {
              method {
                description = "The HTTP method"
                enum = [get, head, post, put, delete, connect, options, trace, patch]
              }
              path {
                description = "The HTTP path or route"
                type = string
              }
            }
          }
        }
      }
    }
  }
}
