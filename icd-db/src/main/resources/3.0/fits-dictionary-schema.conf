id: "http://csw.tmt.org/fits-dictionary-schema#"
"$schema": "http://json-schema.org/draft-07/schema#"

definitions {
  // Type of a FITS source (can be used standalone or inside a channel definition)
  fitsSource = {
    type = object
    //    XXX TODO FIXME: many keys are missing the source info
//    required = [subsystem]
    additionalProperties: false
    properties {
      subsystem {
        description = "The subsystem containing the source event"
        type = string
      }
      componentName {
        description = "The component containing the source event"
        type = string
      }
      eventName {
        description = "The name of the source event"
        type = string
      }
      parameterName {
        description = "The name of the parameter in the source event that is used to generate the keyword value"
        type = string
      }
      index {
        description = "If the event's parameter value is an array, this is the index in the array of the keyword value (default: 0)"
        type = integer
      }
      rowIndex {
        description = "If the event's parameter value is a matrix, this is the row index in the matrix of the keyword values (default: 0)"
        type = integer
      }
    }
  }

  fitsChannel = {
    type = object
    required = [name, comment, source]
    additionalProperties: false
    properties {
      name {
        description = "The channel name"
        type = string
      }
      comment {
        description = "A comment describing the FITS keyword channel"
        type = string
      }
      source = {"$ref": "#/definitions/fitsSource"}
    }
  }

  fitsKeyDef = {
    type = object
    additionalProperties: false
    oneOf: [
      // require either a source or a channel item
      {required = [name, description, type, source]}
      {required = [name, description, type, channel]}
      // XXX TODO FIXME: Some keywords don't have a source defined yet
    ]
    properties {
      name = {
        description = "The name of the FITS keyword"
        type = string
      }
      description = {
        description = "A description of the FITS keyword"
        type = string
      }
      type = {
        description = "The data type of the FITS keyword"
        // XXX TODO FIXME: Current FITS Dictionary doesn't pass this validation yet
//        enum = [
//          boolean,
//          integer,
//          string,
//          byte,
//          short,
//          long,
//          float,
//          double
//        ]
        type = string
      }
      units: {
        description = "The units of the FITS keyword value"
//        include classpath("3.0/units.conf")
        type = string
      }
      source = {
        "$ref": "#/definitions/fitsSource"
      }
      channel = {
        type = array
        items {
          "$ref": "#/definitions/fitsChannel"
        }
      }
    }
  }
}

description = "Defines a list of FITS keywords and their source components/events"
type = object
required = [fitsKeyInfo]
additionalProperties: false
properties {
  _id {
    description = "Optional unique id (automatically generated)"
    type = string
  }
  _version {
    description = "Optional version (automatically generated)"
    type = integer
  }
  fitsKeyInfo {
    type = array
    items {
      "$ref": "#/definitions/fitsKeyDef"
    }
  }
}
