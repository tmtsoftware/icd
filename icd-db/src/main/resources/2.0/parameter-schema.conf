id: "http://csw.tmt.org/parameter-schema#"
"$schema": "http://json-schema.org/draft-07/schema#"

description: "Based on json-schema (draft-07), converted to HOCON format and edited for use in defining CSW parameters"
title: "Core schema meta-schema",
definitions: {
  schemaArray: {
    type: array
    minItems: 1
    items: {"$ref": "#"}
  }
  nonNegativeInteger: {
    type: integer
    minimum: 0
  }
  nonNegativeIntegerDefault0: {
    allOf: [
      {"$ref": "#/definitions/nonNegativeInteger"}
      {default: 0}
    ]
  }

  // Types for attributes: See the corresponding key and parameter set types, subclasses of the csw SimpleKeyType class
  simpleTypes: {
    enum: [
      array,
      struct,
      boolean,
      integer,
      number, // deprecated
      string,
      byte,
      short,
      long,
      float,
      double,
      taiDate,
      utcDate,
      raDec,
      eqCoord,
      solarSystemCoord,
      minorPlanetCoord,
      cometCoord,
      altAzCoord,
      coord
    ]
  }
  stringArray: {
    type: array
    items: {type: string}
    uniqueItems: true
    default: []
  }
}
type: [
  object,
  boolean
]
properties: {
  description: {
    type: string
  }
  default: true
  maximum: {
    oneOf: [
      {type: number}
      {type: string}
    ]
  }
  exclusiveMaximum: {
    oneOf: [
      {type: number}
      {type: string}
    ]
  }
  minimum: {
    oneOf: [
      {type: number}
      {type: string}
    ]
  }
  exclusiveMinimum: {
    oneOf: [
      {type: number}
      {type: string}
    ]
  }
  allowNaN: {
    type: boolean
    default: false
  }
  maxLength: {"$ref": "#/definitions/nonNegativeInteger"}
  minLength: {"$ref": "#/definitions/nonNegativeIntegerDefault0"}
  items: {
    anyOf: [
      {"$ref": "#"}
      {"$ref": "#/definitions/schemaArray"}
    ]
    default: true
  }
  maxItems: {"$ref": "#/definitions/nonNegativeInteger"}
  minItems: {"$ref": "#/definitions/nonNegativeIntegerDefault0"}
  uniqueItems: {
    type: boolean
    default: false
  }
  enum: {
    type: array
    items: true
    minItems: 1
    uniqueItems: true
  }
  type: {
    anyOf: [
      {"$ref": "#/definitions/simpleTypes"}
      {
        type: array
        items: {"$ref": "#/definitions/simpleTypes"}
        minItems: 1
        uniqueItems: true
      }
    ]
  }
  // Allow "attributes" for backward compatibility, but prefer "parameters", to match csw
  attributes = {
    "$ref": "classpath:/2.0/parameters-schema.conf"
  }
  parameters = {
    "$ref": "classpath:/2.0/parameters-schema.conf"
  }
  name: {
    type: string
  }
  ref: {
    type: string
    description = "A reference to another attribute to copy any missing definitions from, in the form $componentName/events/$eventName/parameters/$paramName (may be abbreviated if in same section/component: See docs.)"
  }
  units: {
    type: string
  }
  dimensions: {
    type: array
    items: {type: integer}
    minItems: 1
  }
}
default: true
additionalProperties: false
